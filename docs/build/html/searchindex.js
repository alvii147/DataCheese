Search.setIndex({"docnames": ["activations", "api_documentation", "clustering", "convolution", "index", "knn", "neural_networks", "regression", "utils"], "filenames": ["activations.rst", "api_documentation.rst", "clustering.rst", "convolution.rst", "index.rst", "knn.rst", "neural_networks.rst", "regression.rst", "utils.rst"], "titles": ["activations", "API Documentation", "clustering", "convolution", "DataCheese", "knn", "neural_networks", "regression", "utils"], "terms": {"datachees": [0, 2, 3, 5, 6, 7, 8], "sigmoid": [0, 1, 6], "x": [0, 2, 5, 6, 7, 8], "function": [0, 6], "sigma": 0, "frac": [0, 8], "1": [0, 2, 3, 5, 6, 7, 8], "e": [0, 6, 7], "paramet": [0, 2, 3, 5, 6, 7, 8], "numpi": [0, 2, 3, 5, 6, 7, 8], "ndarrai": [0, 2, 3, 5, 6, 7, 8], "input": [0, 2, 5, 6, 7], "valu": [0, 3, 5, 6, 7, 8], "return": [0, 2, 3, 5, 6, 7, 8], "f": [0, 6], "output": [0, 3, 6], "type": [0, 2, 3, 5, 6, 7, 8], "sigmoid_deriv": [0, 1], "none": [0, 2, 5, 6, 8], "deriv": [0, 6], "If": [0, 6], "i": [0, 2, 4, 5, 6, 7, 8], "provid": [0, 6], "comput": [0, 2, 5, 6, 7, 8], "directli": [0, 6], "2": [0, 2, 3, 5, 6, 7, 8], "antideriv": [0, 6], "us": [0, 2, 3, 5, 6, 7, 8], "bigg": [0, 8], "default": [0, 2, 6, 7, 8], "f_prime": 0, "tanh": [0, 1], "hyperbol": [0, 6], "tangent": [0, 6], "tanh_deriv": [0, 1], "relu": [0, 1, 6], "rectifi": [0, 6], "linear": [0, 6, 7], "unit": [0, 6], "text": 0, "max": 0, "0": [0, 2, 3, 5, 6, 7, 8], "relu_deriv": [0, 1], "begin": 0, "case": [0, 7, 8], "le": 0, "end": 0, "ne": 0, "leaky_relu": [0, 1], "alpha": [0, 6], "01": [0, 6, 7], "leaki": [0, 6], "leakyrelu": 0, "float": [0, 2, 3, 5, 6, 7, 8], "neg": [0, 6, 7], "slope": [0, 6], "where": [0, 2, 5, 6, 7], "leaky_relu_deriv": [0, 1], "activ": [1, 4, 6], "neural_network": [1, 4], "baselay": [1, 6], "linearlay": [1, 6], "sigmoidlay": [1, 6], "tanhlay": [1, 6], "relulay": [1, 6], "leakyrelulay": [1, 6], "multilayerperceptron": [1, 6], "util": [1, 4], "assert_ndarray_shap": [1, 8], "assert_fit": [1, 8], "pad_arrai": [1, 8], "api": 4, "index": 4, "modul": 4, "search": 4, "page": 4, "class": [2, 5, 6, 7, 8], "n_input": 6, "n_node": 6, "kwarg": 6, "base": [2, 5, 6, 7], "object": [2, 5, 6, 7], "neural": 6, "network": 6, "layer": [3, 6], "int": [2, 3, 5, 6, 7, 8], "number": [2, 3, 5, 6, 7, 8], "usual": 6, "equal": 6, "node": 6, "previou": 6, "neuron": 6, "dict": 6, "specif": 6, "activation_deriv": 6, "predict": [2, 5, 6, 7], "given": [2, 6, 8], "current": 6, "weight": [6, 7], "y_pred": [5, 6, 7], "feed_forward": 6, "feed": 6, "forward": 6, "train": [5, 6, 7], "exampl": [2, 3, 5, 6, 7, 8], "out": [3, 6], "back_propag": 6, "lr": [6, 7], "perform": [3, 6, 7], "backpropag": 6, "error": [6, 8], "propag": 6, "from": [2, 3, 5, 6, 7, 8], "learn": [4, 6, 7], "rate": [6, 7], "updat": [6, 7], "e_next": 6, "backward": 6, "5": [2, 3, 6, 7], "multi": 6, "percetron": 6, "implement": [4, 6], "import": [2, 3, 5, 6, 7, 8], "np": [2, 3, 5, 6, 7, 8], "gener": [2, 5, 6, 7], "data": [2, 4, 5, 6, 7], "n_pattern": 6, "n_dimens": 6, "3": [2, 3, 5, 6, 7, 8], "n_class": 6, "rng": 6, "random": [6, 8], "default_rng": 6, "size": 6, "y": [5, 6, 7, 8], "initi": 6, "model": [2, 5, 6, 7], "hidden": 6, "respect": [2, 6, 7], "add_lay": 6, "4": [2, 3, 6, 7, 8], "over": [3, 6], "20": [6, 7], "epoch": 6, "fit": [2, 5, 6, 7, 8], "verbos": 6, "loss": [6, 7], "15181599599950849": 6, "13701115369406147": 6, "8": [3, 6, 7], "11337662383705667": 6, "12": [6, 7], "10121139637335393": 6, "16": 6, "09388681525946835": 6, "make": [2, 5, 6, 7], "mean": [2, 6], "05310463606057757": 6, "add": [3, 6, 8], "through": 6, "each": [2, 3, 6], "actual": [6, 7], "last": [6, 8], "2d": [2, 3, 5, 6, 7, 8], "arrai": [2, 3, 5, 6, 7, 8], "pattern": 6, "shape": [2, 5, 6, 7, 8], "n": [2, 5, 6, 7], "d": [2, 5, 6, 7, 8], "dimens": [2, 3, 5, 6, 7, 8], "c": [6, 8], "log": [6, 7], "m": [2, 5, 6, 7], "test": [5, 6, 7], "A": 8, "name": 8, "assert": 8, "check": 8, "tupl": [3, 8], "expect": 8, "repres": [3, 7, 8], "ar": 8, "ignor": 8, "str": [2, 7, 8], "displai": 8, "construct": 8, "messag": 8, "zero": [7, 8], "mai": 8, "arrayshapeerror": 8, "rais": 8, "when": [3, 8], "don": 8, "t": [7, 8], "match": 8, "7": [3, 7, 8], "traceback": 8, "most": 8, "recent": 8, "call": 8, "invalid": 8, "got": 8, "9": [3, 7, 8], "class_nam": 8, "an": 8, "estim": 8, "ha": 8, "been": 8, "bool": 8, "whether": 8, "instanc": 8, "true": 8, "fals": 8, "notfittederror": 8, "except": 8, "thi": [2, 7, 8], "yet": 8, "method": [7, 8], "befor": 8, "myclass": 8, "edg": 8, "constant": [7, 8], "pad": [3, 8], "one": [2, 7, 8], "side": 8, "which": [7, 8], "ad": 8, "must": [2, 7, 8], "top": 8, "bottom": 8, "left": 8, "right": 8, "ap": 8, "dtype": [2, 5, 7, 8], "float64": [2, 5, 7, 8], "regress": [1, 4], "x_0": 7, "x_1": 7, "dot": [], "set": [7, 8], "lamdba": 7, "non": 7, "ridg": 7, "lambda": 7, "71555556": [], "featur": [2, 5, 7], "1d": [2, 5, 8], "target": [5, 7], "length": 8, "regular": 7, "penalti": 7, "term": 7, "special": 7, "ordinari": 7, "least": 7, "squar": [2, 7], "score": [2, 5, 7], "r": 7, "r_squar": 7, "between": [2, 5, 7, 8], "linearregress": [1, 7], "logisticregress": [1, 7], "assert_str_choic": [1, 8], "equat": 7, "6": 7, "11": [2, 7], "x_test": [2, 5, 7], "y_test": [5, 7], "13": 7, "accuraci": [5, 7], "87830688": [], "26984127": [], "8123917148020608": [], "binari": 7, "logist": 7, "OR": 7, "logic": 7, "gate": 7, "ani": [7, 8], "axi": [7, 8], "astyp": 7, "obtain": 7, "probabl": 7, "predict_prob": 7, "05523008": [], "99999961": [], "98907499": [], "98196914": [], "chang": 7, "metric": [2, 7], "log_loss": 7, "09550699766960563": [], "toler": 7, "0001": 7, "max_it": [2, 7], "1000": [2, 7], "gradient": 7, "onli": 7, "descent": 7, "maximum": [2, 7], "element": 7, "vector": [7, 8], "termin": 7, "criteria": 7, "iter": [2, 7], "either": 7, "newton": 7, "": 7, "y_prob": 7, "can": [2, 7], "classif": [5, 7], "depend": [2, 7], "chosen": [2, 7], "correspond": [2, 7], "array_nam": 8, "str_val": 8, "choic": 8, "str_name": 8, "string": 8, "case_insensit": 8, "belong": 8, "list": 8, "allow": 8, "variabl": 8, "sensit": 8, "eu_countri": 8, "germani": 8, "itali": 8, "spain": 8, "eu": 8, "countri": 8, "britain": 8, "valueerror": 8, "y_0": 7, "y_1": 7, "matmul": 7, "61904762": [], "71428571": [], "9949843299191553": [], "x_2": 7, "9936284": [], "99638247": [], "14": 7, "19": 7, "10": 2, "22": [], "90965347": [], "85040984": [], "65699362": [], "56645386": [], "43278248": [], "76689984": [], "9857039": [], "97764573": [], "6669421": 7, "50426919": 7, "51303651": 7, "18": 7, "88126742": 7, "99827693": 7, "99946753": 7, "l2": 7, "column_stack": 7, "all": 7, "AND": 7, "15437859e": 7, "02": 7, "96513677e": 7, "04": 7, "79474434e": 7, "90497532e": 7, "99976135e": 7, "31203746e": 7, "0944218": 7, "17206078": 7, "convolut": [1, 4], "conv2d": [1, 3], "img": 3, "kernel": 3, "stride": 3, "fill": 3, "oper": 3, "imag": 3, "around": 3, "nadarrai": 3, "defin": [3, 8], "both": 3, "17": 3, "15": 3, "31": 3, "21": 3, "seed": [2, 5, 6, 8], "reproduc": [6, 8], "result": [6, 8], "k": [2, 5], "nearest": 5, "neighbour": 5, "pairwise_dist": [1, 8], "a1": 8, "a2": 8, "p": 8, "pairwis": 8, "minkowski": 8, "distanc": 8, "two": 8, "textbf": 8, "follow": 8, "sumlimit": [], "n_": 8, "x_i": 8, "y_i": 8, "share": 8, "same": 8, "second": 8, "expon": 8, "mode": 8, "get": [], "mode_along_axi": [], "along": [], "process": 5, "store": [2, 5], "knn": [1, 4], "sumbigg": [], "sum": [2, 8], "limit": 8, "array_mode_valu": [1, 8], "extract": 8, "ti": 8, "broken": 8, "randomli": 8, "cluster": [1, 4], "kmean": [1, 2], "label": 2, "centroid": 2, "int64": 2, "within": 2, "wcss": 2, "0000000000000004": 2, "bcss": 2, "40": 2, "point": 2, "contain": 2, "contrain": 2, "coordin": 2, "python": 4, "librari": 4, "popular": 4, "scienc": 4, "machin": 4, "algorithm": 4, "document": 4}, "objects": {"datacheese": [[0, 0, 0, "-", "activations"], [2, 0, 0, "-", "clustering"], [3, 0, 0, "-", "convolution"], [5, 0, 0, "-", "knn"], [6, 0, 0, "-", "neural_networks"], [7, 0, 0, "-", "regression"], [8, 0, 0, "-", "utils"]], "datacheese.activations": [[0, 1, 1, "", "leaky_relu"], [0, 1, 1, "", "leaky_relu_derivative"], [0, 1, 1, "", "relu"], [0, 1, 1, "", "relu_derivative"], [0, 1, 1, "", "sigmoid"], [0, 1, 1, "", "sigmoid_derivative"], [0, 1, 1, "", "tanh"], [0, 1, 1, "", "tanh_derivative"]], "datacheese.clustering": [[2, 2, 1, "", "KMeans"]], "datacheese.clustering.KMeans": [[2, 3, 1, "", "fit"], [2, 3, 1, "", "predict"], [2, 3, 1, "", "score"]], "datacheese.convolution": [[3, 1, 1, "", "conv2d"]], "datacheese.knn": [[5, 2, 1, "", "KNN"]], "datacheese.knn.KNN": [[5, 3, 1, "", "fit"], [5, 3, 1, "", "predict"], [5, 3, 1, "", "score"]], "datacheese.neural_networks": [[6, 2, 1, "", "BaseLayer"], [6, 2, 1, "", "LeakyReLULayer"], [6, 2, 1, "", "LinearLayer"], [6, 2, 1, "", "MultiLayerPerceptron"], [6, 2, 1, "", "ReLULayer"], [6, 2, 1, "", "SigmoidLayer"], [6, 2, 1, "", "TanhLayer"]], "datacheese.neural_networks.BaseLayer": [[6, 3, 1, "", "activation"], [6, 3, 1, "", "activation_derivative"], [6, 3, 1, "", "back_propagate"], [6, 3, 1, "", "feed_forward"], [6, 3, 1, "", "predict"]], "datacheese.neural_networks.LeakyReLULayer": [[6, 3, 1, "", "activation"], [6, 3, 1, "", "activation_derivative"]], "datacheese.neural_networks.LinearLayer": [[6, 3, 1, "", "activation"], [6, 3, 1, "", "activation_derivative"]], "datacheese.neural_networks.MultiLayerPerceptron": [[6, 3, 1, "", "add_layer"], [6, 3, 1, "", "back_propagate"], [6, 3, 1, "", "feed_forward"], [6, 3, 1, "", "fit"], [6, 3, 1, "", "predict"]], "datacheese.neural_networks.ReLULayer": [[6, 3, 1, "", "activation"], [6, 3, 1, "", "activation_derivative"]], "datacheese.neural_networks.SigmoidLayer": [[6, 3, 1, "", "activation"], [6, 3, 1, "", "activation_derivative"]], "datacheese.neural_networks.TanhLayer": [[6, 3, 1, "", "activation"], [6, 3, 1, "", "activation_derivative"]], "datacheese.regression": [[7, 2, 1, "", "LinearRegression"], [7, 2, 1, "", "LogisticRegression"]], "datacheese.regression.LinearRegression": [[7, 3, 1, "", "fit"], [7, 3, 1, "", "predict"], [7, 3, 1, "", "score"]], "datacheese.regression.LogisticRegression": [[7, 3, 1, "", "fit"], [7, 3, 1, "", "predict"], [7, 3, 1, "", "predict_prob"], [7, 3, 1, "", "score"]], "datacheese.utils": [[8, 1, 1, "", "array_mode_value"], [8, 1, 1, "", "assert_fitted"], [8, 1, 1, "", "assert_ndarray_shape"], [8, 1, 1, "", "assert_str_choice"], [8, 1, 1, "", "pad_array"], [8, 1, 1, "", "pairwise_distances"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"activ": 0, "api": 1, "document": 1, "welcom": [], "datachees": 4, "": [], "content": [], "indic": 4, "tabl": 4, "neural_network": 6, "util": 8, "regress": 7, "convolut": 3, "knn": 5, "cluster": 2}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"activations": [[0, "module-datacheese.activations"]], "API Documentation": [[1, "api-documentation"]], "clustering": [[2, "module-datacheese.clustering"]], "convolution": [[3, "module-datacheese.convolution"]], "DataCheese": [[4, "datacheese"]], "Indices and tables": [[4, "indices-and-tables"]], "knn": [[5, "module-datacheese.knn"]], "neural_networks": [[6, "module-datacheese.neural_networks"]], "regression": [[7, "module-datacheese.regression"]], "utils": [[8, "module-datacheese.utils"]]}, "indexentries": {"datacheese.activations": [[0, "module-datacheese.activations"]], "leaky_relu() (in module datacheese.activations)": [[0, "datacheese.activations.leaky_relu"]], "leaky_relu_derivative() (in module datacheese.activations)": [[0, "datacheese.activations.leaky_relu_derivative"]], "module": [[0, "module-datacheese.activations"], [2, "module-datacheese.clustering"], [3, "module-datacheese.convolution"], [5, "module-datacheese.knn"], [6, "module-datacheese.neural_networks"], [7, "module-datacheese.regression"], [8, "module-datacheese.utils"]], "relu() (in module datacheese.activations)": [[0, "datacheese.activations.relu"]], "relu_derivative() (in module datacheese.activations)": [[0, "datacheese.activations.relu_derivative"]], "sigmoid() (in module datacheese.activations)": [[0, "datacheese.activations.sigmoid"]], "sigmoid_derivative() (in module datacheese.activations)": [[0, "datacheese.activations.sigmoid_derivative"]], "tanh() (in module datacheese.activations)": [[0, "datacheese.activations.tanh"]], "tanh_derivative() (in module datacheese.activations)": [[0, "datacheese.activations.tanh_derivative"]], "kmeans (class in datacheese.clustering)": [[2, "datacheese.clustering.KMeans"]], "datacheese.clustering": [[2, "module-datacheese.clustering"]], "fit() (datacheese.clustering.kmeans method)": [[2, "datacheese.clustering.KMeans.fit"]], "predict() (datacheese.clustering.kmeans method)": [[2, "datacheese.clustering.KMeans.predict"]], "score() (datacheese.clustering.kmeans method)": [[2, "datacheese.clustering.KMeans.score"]], "conv2d() (in module datacheese.convolution)": [[3, "datacheese.convolution.conv2d"]], "datacheese.convolution": [[3, "module-datacheese.convolution"]], "knn (class in datacheese.knn)": [[5, "datacheese.knn.KNN"]], "datacheese.knn": [[5, "module-datacheese.knn"]], "fit() (datacheese.knn.knn method)": [[5, "datacheese.knn.KNN.fit"]], "predict() (datacheese.knn.knn method)": [[5, "datacheese.knn.KNN.predict"]], "score() (datacheese.knn.knn method)": [[5, "datacheese.knn.KNN.score"]], "baselayer (class in datacheese.neural_networks)": [[6, "datacheese.neural_networks.BaseLayer"]], "leakyrelulayer (class in datacheese.neural_networks)": [[6, "datacheese.neural_networks.LeakyReLULayer"]], "linearlayer (class in datacheese.neural_networks)": [[6, "datacheese.neural_networks.LinearLayer"]], "multilayerperceptron (class in datacheese.neural_networks)": [[6, "datacheese.neural_networks.MultiLayerPerceptron"]], "relulayer (class in datacheese.neural_networks)": [[6, "datacheese.neural_networks.ReLULayer"]], "sigmoidlayer (class in datacheese.neural_networks)": [[6, "datacheese.neural_networks.SigmoidLayer"]], "tanhlayer (class in datacheese.neural_networks)": [[6, "datacheese.neural_networks.TanhLayer"]], "activation() (datacheese.neural_networks.baselayer method)": [[6, "datacheese.neural_networks.BaseLayer.activation"]], "activation() (datacheese.neural_networks.leakyrelulayer method)": [[6, "datacheese.neural_networks.LeakyReLULayer.activation"]], "activation() (datacheese.neural_networks.linearlayer method)": [[6, "datacheese.neural_networks.LinearLayer.activation"]], "activation() (datacheese.neural_networks.relulayer method)": [[6, "datacheese.neural_networks.ReLULayer.activation"]], "activation() (datacheese.neural_networks.sigmoidlayer method)": [[6, "datacheese.neural_networks.SigmoidLayer.activation"]], "activation() (datacheese.neural_networks.tanhlayer method)": [[6, "datacheese.neural_networks.TanhLayer.activation"]], "activation_derivative() (datacheese.neural_networks.baselayer method)": [[6, "datacheese.neural_networks.BaseLayer.activation_derivative"]], "activation_derivative() (datacheese.neural_networks.leakyrelulayer method)": [[6, "datacheese.neural_networks.LeakyReLULayer.activation_derivative"]], "activation_derivative() (datacheese.neural_networks.linearlayer method)": [[6, "datacheese.neural_networks.LinearLayer.activation_derivative"]], "activation_derivative() (datacheese.neural_networks.relulayer method)": [[6, "datacheese.neural_networks.ReLULayer.activation_derivative"]], "activation_derivative() (datacheese.neural_networks.sigmoidlayer method)": [[6, "datacheese.neural_networks.SigmoidLayer.activation_derivative"]], "activation_derivative() (datacheese.neural_networks.tanhlayer method)": [[6, "datacheese.neural_networks.TanhLayer.activation_derivative"]], "add_layer() (datacheese.neural_networks.multilayerperceptron method)": [[6, "datacheese.neural_networks.MultiLayerPerceptron.add_layer"]], "back_propagate() (datacheese.neural_networks.baselayer method)": [[6, "datacheese.neural_networks.BaseLayer.back_propagate"]], "back_propagate() (datacheese.neural_networks.multilayerperceptron method)": [[6, "datacheese.neural_networks.MultiLayerPerceptron.back_propagate"]], "datacheese.neural_networks": [[6, "module-datacheese.neural_networks"]], "feed_forward() (datacheese.neural_networks.baselayer method)": [[6, "datacheese.neural_networks.BaseLayer.feed_forward"]], "feed_forward() (datacheese.neural_networks.multilayerperceptron method)": [[6, "datacheese.neural_networks.MultiLayerPerceptron.feed_forward"]], "fit() (datacheese.neural_networks.multilayerperceptron method)": [[6, "datacheese.neural_networks.MultiLayerPerceptron.fit"]], "predict() (datacheese.neural_networks.baselayer method)": [[6, "datacheese.neural_networks.BaseLayer.predict"]], "predict() (datacheese.neural_networks.multilayerperceptron method)": [[6, "datacheese.neural_networks.MultiLayerPerceptron.predict"]], "linearregression (class in datacheese.regression)": [[7, "datacheese.regression.LinearRegression"]], "logisticregression (class in datacheese.regression)": [[7, "datacheese.regression.LogisticRegression"]], "datacheese.regression": [[7, "module-datacheese.regression"]], "fit() (datacheese.regression.linearregression method)": [[7, "datacheese.regression.LinearRegression.fit"]], "fit() (datacheese.regression.logisticregression method)": [[7, "datacheese.regression.LogisticRegression.fit"]], "predict() (datacheese.regression.linearregression method)": [[7, "datacheese.regression.LinearRegression.predict"]], "predict() (datacheese.regression.logisticregression method)": [[7, "datacheese.regression.LogisticRegression.predict"]], "predict_prob() (datacheese.regression.logisticregression method)": [[7, "datacheese.regression.LogisticRegression.predict_prob"]], "score() (datacheese.regression.linearregression method)": [[7, "datacheese.regression.LinearRegression.score"]], "score() (datacheese.regression.logisticregression method)": [[7, "datacheese.regression.LogisticRegression.score"]], "array_mode_value() (in module datacheese.utils)": [[8, "datacheese.utils.array_mode_value"]], "assert_fitted() (in module datacheese.utils)": [[8, "datacheese.utils.assert_fitted"]], "assert_ndarray_shape() (in module datacheese.utils)": [[8, "datacheese.utils.assert_ndarray_shape"]], "assert_str_choice() (in module datacheese.utils)": [[8, "datacheese.utils.assert_str_choice"]], "datacheese.utils": [[8, "module-datacheese.utils"]], "pad_array() (in module datacheese.utils)": [[8, "datacheese.utils.pad_array"]], "pairwise_distances() (in module datacheese.utils)": [[8, "datacheese.utils.pairwise_distances"]]}})