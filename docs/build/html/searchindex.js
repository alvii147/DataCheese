Search.setIndex({"docnames": ["activations", "api_documentation", "index", "neural_networks", "utils"], "filenames": ["activations.rst", "api_documentation.rst", "index.rst", "neural_networks.rst", "utils.rst"], "titles": ["activations", "API Documentation", "Welcome to DataCheese\u2019s documentation!", "neural_networks", "utils"], "terms": {"index": 2, "modul": 2, "search": 2, "page": 2, "datachees": [0, 3, 4], "leaky_relu": [0, 1], "x": [0, 3], "ndarrai": [0, 3, 4], "ani": [], "dtype": 4, "float64": 4, "alpha": [0, 3], "float": [0, 3, 4], "0": [0, 3, 4], "01": [0, 3], "leaki": [0, 3], "relu": [0, 1, 3], "rectifi": [0, 3], "linear": [0, 3], "unit": [0, 3], "function": [0, 3], "text": 0, "leakyrelu": 0, "max": 0, "paramet": [0, 3, 4], "numpi": [0, 3, 4], "input": [0, 3], "valu": [0, 3], "neg": [0, 3], "slope": [0, 3], "where": 0, "le": 0, "1": [0, 3, 4], "return": [0, 3, 4], "f": [0, 3], "output": [0, 3], "type": [0, 3, 4], "leaky_relu_deriv": [0, 1], "none": [0, 3, 4], "deriv": [0, 3], "If": [0, 3], "i": [0, 3, 4], "provid": [0, 3], "comput": [0, 3], "directli": [0, 3], "begin": 0, "case": 0, "end": 0, "antideriv": [0, 3], "us": [0, 3, 4], "default": [0, 3, 4], "f_prime": 0, "relu_deriv": [0, 1], "ne": 0, "sigmoid": [0, 1, 3], "sigma": 0, "frac": 0, "e": [0, 3], "sigmoid_deriv": [0, 1], "2": [0, 3, 4], "bigg": 0, "tanh": [0, 1], "hyperbol": [0, 3], "tangent": [0, 3], "tanh_deriv": [0, 1], "activ": [1, 2, 3], "util": [1, 2], "arrayshapeerror": [1, 4], "assert_ndarray_shap": [1, 4], "except": 4, "base": [3, 4], "baseexcept": 4, "rais": 4, "invalid": 4, "arrai": [3, 4], "shape": 4, "A": 4, "tupl": 4, "int": 3, "name": 4, "str": 4, "assert": 4, "given": [3, 4], "check": 4, "expect": 4, "repres": 4, "dimens": 4, "ar": 4, "ignor": 4, "displai": 4, "construct": 4, "error": [3, 4], "messag": 4, "exampl": [3, 4], "import": [3, 4], "np": [3, 4], "zero": 4, "3": [3, 4], "4": [3, 4], "mai": 4, "when": 4, "don": 4, "t": 4, "match": 4, "7": 4, "traceback": 4, "most": 4, "recent": 4, "call": 4, "last": [3, 4], "got": 4, "number": [3, 4], "9": 4, "neural_network": [1, 2], "baselay": [1, 3], "activation_deriv": 3, "back_propag": 3, "feed_forward": 3, "predict": 3, "leakyrelulay": [1, 3], "linearlay": [1, 3], "neuralnetwork": [], "add_lay": 3, "fit": 3, "relulay": [1, 3], "sigmoidlay": [1, 3], "tanhlay": [1, 3], "class": 3, "n_input": 3, "n_node": 3, "kwarg": 3, "object": 3, "neural": 3, "network": 3, "layer": 3, "usual": 3, "equal": 3, "node": 3, "previou": 3, "neuron": 3, "dict": 3, "specif": 3, "implement": 3, "inherit": [], "lr": 3, "perform": 3, "backpropag": 3, "forward": 3, "propag": 3, "from": [3, 4], "learn": 3, "rate": 3, "weight": 3, "updat": 3, "e_next": 3, "backward": 3, "feed": 3, "train": 3, "out": 3, "current": 3, "y_pred": 3, "5": 3, "multi": 3, "add": [3, 4], "y": 3, "through": 3, "actual": 3, "each": 3, "epoch": 3, "verbos": 3, "data": 3, "over": 3, "2d": [3, 4], "pattern": 3, "log": 3, "multilayerperceptron": [1, 3], "percetron": 3, "n_pattern": 3, "n_dimens": 3, "n_class": 3, "rng": 3, "random": 3, "default_rng": 3, "size": 3, "model": 3, "20": 3, "loss": 3, "15181599599950849": 3, "13701115369406147": 3, "8": 3, "11337662383705667": 3, "12": 3, "10121139637335393": 3, "16": 3, "09388681525946835": 3, "mean": 3, "05310463606057757": 3, "gener": 3, "initi": 3, "hidden": 3, "respect": 3, "make": 3, "api": 2, "pad_arrai": [1, 4], "edg": 4, "c": 4, "constant": 4, "pad": 4, "one": 4, "side": 4, "which": 4, "ad": 4, "must": 4, "top": 4, "bottom": 4, "left": 4, "right": 4, "ap": 4}, "objects": {"datacheese": [[0, 0, 0, "-", "activations"], [3, 0, 0, "-", "neural_networks"], [4, 0, 0, "-", "utils"]], "datacheese.activations": [[0, 1, 1, "", "leaky_relu"], [0, 1, 1, "", "leaky_relu_derivative"], [0, 1, 1, "", "relu"], [0, 1, 1, "", "relu_derivative"], [0, 1, 1, "", "sigmoid"], [0, 1, 1, "", "sigmoid_derivative"], [0, 1, 1, "", "tanh"], [0, 1, 1, "", "tanh_derivative"]], "datacheese.neural_networks": [[3, 2, 1, "", "BaseLayer"], [3, 2, 1, "", "LeakyReLULayer"], [3, 2, 1, "", "LinearLayer"], [3, 2, 1, "", "MultiLayerPerceptron"], [3, 2, 1, "", "ReLULayer"], [3, 2, 1, "", "SigmoidLayer"], [3, 2, 1, "", "TanhLayer"]], "datacheese.neural_networks.BaseLayer": [[3, 3, 1, "", "activation"], [3, 3, 1, "", "activation_derivative"], [3, 3, 1, "", "back_propagate"], [3, 3, 1, "", "feed_forward"], [3, 3, 1, "", "predict"]], "datacheese.neural_networks.LeakyReLULayer": [[3, 3, 1, "", "activation"], [3, 3, 1, "", "activation_derivative"]], "datacheese.neural_networks.LinearLayer": [[3, 3, 1, "", "activation"], [3, 3, 1, "", "activation_derivative"]], "datacheese.neural_networks.MultiLayerPerceptron": [[3, 3, 1, "", "add_layer"], [3, 3, 1, "", "back_propagate"], [3, 3, 1, "", "feed_forward"], [3, 3, 1, "", "fit"], [3, 3, 1, "", "predict"]], "datacheese.neural_networks.ReLULayer": [[3, 3, 1, "", "activation"], [3, 3, 1, "", "activation_derivative"]], "datacheese.neural_networks.SigmoidLayer": [[3, 3, 1, "", "activation"], [3, 3, 1, "", "activation_derivative"]], "datacheese.neural_networks.TanhLayer": [[3, 3, 1, "", "activation"], [3, 3, 1, "", "activation_derivative"]], "datacheese.utils": [[4, 4, 1, "", "ArrayShapeError"], [4, 1, 1, "", "assert_ndarray_shape"], [4, 1, 1, "", "pad_array"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "exception", "Python exception"]}, "titleterms": {"welcom": 2, "datachees": 2, "": 2, "document": [1, 2], "indic": 2, "tabl": 2, "activ": 0, "content": 2, "util": 4, "neural_network": 3, "api": 1}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"activations": [[0, "module-datacheese.activations"]], "API Documentation": [[1, "api-documentation"]], "Welcome to DataCheese\u2019s documentation!": [[2, "welcome-to-datacheese-s-documentation"]], "Contents:": [[2, null]], "Indices and tables": [[2, "indices-and-tables"]], "neural_networks": [[3, "module-datacheese.neural_networks"]], "utils": [[4, "module-datacheese.utils"]]}, "indexentries": {"datacheese.activations": [[0, "module-datacheese.activations"]], "leaky_relu() (in module datacheese.activations)": [[0, "datacheese.activations.leaky_relu"]], "leaky_relu_derivative() (in module datacheese.activations)": [[0, "datacheese.activations.leaky_relu_derivative"]], "module": [[0, "module-datacheese.activations"], [3, "module-datacheese.neural_networks"], [4, "module-datacheese.utils"]], "relu() (in module datacheese.activations)": [[0, "datacheese.activations.relu"]], "relu_derivative() (in module datacheese.activations)": [[0, "datacheese.activations.relu_derivative"]], "sigmoid() (in module datacheese.activations)": [[0, "datacheese.activations.sigmoid"]], "sigmoid_derivative() (in module datacheese.activations)": [[0, "datacheese.activations.sigmoid_derivative"]], "tanh() (in module datacheese.activations)": [[0, "datacheese.activations.tanh"]], "tanh_derivative() (in module datacheese.activations)": [[0, "datacheese.activations.tanh_derivative"]], "baselayer (class in datacheese.neural_networks)": [[3, "datacheese.neural_networks.BaseLayer"]], "leakyrelulayer (class in datacheese.neural_networks)": [[3, "datacheese.neural_networks.LeakyReLULayer"]], "linearlayer (class in datacheese.neural_networks)": [[3, "datacheese.neural_networks.LinearLayer"]], "multilayerperceptron (class in datacheese.neural_networks)": [[3, "datacheese.neural_networks.MultiLayerPerceptron"]], "relulayer (class in datacheese.neural_networks)": [[3, "datacheese.neural_networks.ReLULayer"]], "sigmoidlayer (class in datacheese.neural_networks)": [[3, "datacheese.neural_networks.SigmoidLayer"]], "tanhlayer (class in datacheese.neural_networks)": [[3, "datacheese.neural_networks.TanhLayer"]], "activation() (datacheese.neural_networks.baselayer method)": [[3, "datacheese.neural_networks.BaseLayer.activation"]], "activation() (datacheese.neural_networks.leakyrelulayer method)": [[3, "datacheese.neural_networks.LeakyReLULayer.activation"]], "activation() (datacheese.neural_networks.linearlayer method)": [[3, "datacheese.neural_networks.LinearLayer.activation"]], "activation() (datacheese.neural_networks.relulayer method)": [[3, "datacheese.neural_networks.ReLULayer.activation"]], "activation() (datacheese.neural_networks.sigmoidlayer method)": [[3, "datacheese.neural_networks.SigmoidLayer.activation"]], "activation() (datacheese.neural_networks.tanhlayer method)": [[3, "datacheese.neural_networks.TanhLayer.activation"]], "activation_derivative() (datacheese.neural_networks.baselayer method)": [[3, "datacheese.neural_networks.BaseLayer.activation_derivative"]], "activation_derivative() (datacheese.neural_networks.leakyrelulayer method)": [[3, "datacheese.neural_networks.LeakyReLULayer.activation_derivative"]], "activation_derivative() (datacheese.neural_networks.linearlayer method)": [[3, "datacheese.neural_networks.LinearLayer.activation_derivative"]], "activation_derivative() (datacheese.neural_networks.relulayer method)": [[3, "datacheese.neural_networks.ReLULayer.activation_derivative"]], "activation_derivative() (datacheese.neural_networks.sigmoidlayer method)": [[3, "datacheese.neural_networks.SigmoidLayer.activation_derivative"]], "activation_derivative() (datacheese.neural_networks.tanhlayer method)": [[3, "datacheese.neural_networks.TanhLayer.activation_derivative"]], "add_layer() (datacheese.neural_networks.multilayerperceptron method)": [[3, "datacheese.neural_networks.MultiLayerPerceptron.add_layer"]], "back_propagate() (datacheese.neural_networks.baselayer method)": [[3, "datacheese.neural_networks.BaseLayer.back_propagate"]], "back_propagate() (datacheese.neural_networks.multilayerperceptron method)": [[3, "datacheese.neural_networks.MultiLayerPerceptron.back_propagate"]], "datacheese.neural_networks": [[3, "module-datacheese.neural_networks"]], "feed_forward() (datacheese.neural_networks.baselayer method)": [[3, "datacheese.neural_networks.BaseLayer.feed_forward"]], "feed_forward() (datacheese.neural_networks.multilayerperceptron method)": [[3, "datacheese.neural_networks.MultiLayerPerceptron.feed_forward"]], "fit() (datacheese.neural_networks.multilayerperceptron method)": [[3, "datacheese.neural_networks.MultiLayerPerceptron.fit"]], "predict() (datacheese.neural_networks.baselayer method)": [[3, "datacheese.neural_networks.BaseLayer.predict"]], "predict() (datacheese.neural_networks.multilayerperceptron method)": [[3, "datacheese.neural_networks.MultiLayerPerceptron.predict"]], "arrayshapeerror": [[4, "datacheese.utils.ArrayShapeError"]], "assert_ndarray_shape() (in module datacheese.utils)": [[4, "datacheese.utils.assert_ndarray_shape"]], "datacheese.utils": [[4, "module-datacheese.utils"]], "pad_array() (in module datacheese.utils)": [[4, "datacheese.utils.pad_array"]]}})