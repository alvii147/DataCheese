Search.setIndex({"docnames": ["activations", "api_documentation", "convolution", "index", "knn", "neural_networks", "regression", "utils"], "filenames": ["activations.rst", "api_documentation.rst", "convolution.rst", "index.rst", "knn.rst", "neural_networks.rst", "regression.rst", "utils.rst"], "titles": ["activations", "API Documentation", "convolution", "Welcome to DataCheese\u2019s documentation!", "knn", "neural_networks", "regression", "utils"], "terms": {"datachees": [0, 2, 4, 5, 6, 7], "sigmoid": [0, 1, 3, 5], "x": [0, 4, 5, 6, 7], "function": [0, 5], "sigma": 0, "frac": [0, 7], "1": [0, 2, 4, 5, 6, 7], "e": [0, 5, 6], "paramet": [0, 2, 4, 5, 6, 7], "numpi": [0, 2, 4, 5, 6, 7], "ndarrai": [0, 2, 4, 5, 6, 7], "input": [0, 4, 5, 6], "valu": [0, 2, 4, 5, 6, 7], "return": [0, 2, 4, 5, 6, 7], "f": [0, 5], "output": [0, 2, 5], "type": [0, 2, 4, 5, 6, 7], "sigmoid_deriv": [0, 1, 3], "none": [0, 4, 5, 7], "deriv": [0, 5], "If": [0, 5], "i": [0, 4, 5, 6, 7], "provid": [0, 5], "comput": [0, 4, 5, 6, 7], "directli": [0, 5], "2": [0, 2, 4, 5, 6, 7], "antideriv": [0, 5], "us": [0, 2, 4, 5, 6, 7], "bigg": [0, 7], "default": [0, 5, 6, 7], "f_prime": 0, "tanh": [0, 1, 3], "hyperbol": [0, 5], "tangent": [0, 5], "tanh_deriv": [0, 1, 3], "relu": [0, 1, 3, 5], "rectifi": [0, 5], "linear": [0, 5, 6], "unit": [0, 5], "text": 0, "max": 0, "0": [0, 2, 4, 5, 6, 7], "relu_deriv": [0, 1, 3], "begin": 0, "case": [0, 6, 7], "le": 0, "end": 0, "ne": 0, "leaky_relu": [0, 1, 3], "alpha": [0, 5], "01": [0, 5, 6], "leaki": [0, 5], "leakyrelu": 0, "float": [0, 2, 4, 5, 6, 7], "neg": [0, 5, 6], "slope": [0, 5], "where": [0, 4, 5, 6], "leaky_relu_deriv": [0, 1, 3], "activ": [1, 3, 5], "neural_network": [1, 3], "baselay": [1, 3, 5], "linearlay": [1, 3, 5], "sigmoidlay": [1, 3, 5], "tanhlay": [1, 3, 5], "relulay": [1, 3, 5], "leakyrelulay": [1, 3, 5], "multilayerperceptron": [1, 3, 5], "util": [1, 3], "assert_ndarray_shap": [1, 3, 7], "assert_fit": [1, 3, 7], "pad_arrai": [1, 3, 7], "api": 3, "index": 3, "modul": 3, "search": 3, "page": 3, "class": [4, 5, 6, 7], "n_input": 5, "n_node": 5, "kwarg": 5, "base": [4, 5, 6], "object": [4, 5, 6], "neural": 5, "network": 5, "layer": [2, 5], "int": [2, 4, 5, 6, 7], "number": [2, 4, 5, 6, 7], "usual": 5, "equal": 5, "node": 5, "previou": 5, "neuron": 5, "dict": 5, "specif": 5, "activation_deriv": 5, "predict": [4, 5, 6], "given": [5, 7], "current": 5, "weight": [5, 6], "y_pred": [4, 5, 6], "feed_forward": 5, "feed": 5, "forward": 5, "train": [4, 5, 6], "exampl": [2, 4, 5, 6, 7], "out": [2, 5], "back_propag": 5, "lr": [5, 6], "perform": [2, 5, 6], "backpropag": 5, "error": [5, 7], "propag": 5, "from": [2, 4, 5, 6, 7], "learn": [5, 6], "rate": [5, 6], "updat": [5, 6], "e_next": 5, "backward": 5, "5": [2, 5, 6], "multi": 5, "percetron": 5, "implement": 5, "import": [2, 4, 5, 6, 7], "np": [2, 4, 5, 6, 7], "gener": [4, 5, 6], "data": [4, 5, 6], "n_pattern": 5, "n_dimens": 5, "3": [2, 4, 5, 6, 7], "n_class": 5, "rng": 5, "random": [5, 7], "default_rng": 5, "size": 5, "y": [4, 5, 6, 7], "initi": 5, "model": [4, 5, 6], "hidden": 5, "respect": [5, 6], "add_lay": 5, "4": [2, 5, 6, 7], "over": [2, 5], "20": [5, 6], "epoch": 5, "fit": [4, 5, 6, 7], "verbos": 5, "loss": [5, 6], "15181599599950849": 5, "13701115369406147": 5, "8": [2, 5, 6], "11337662383705667": 5, "12": [5, 6], "10121139637335393": 5, "16": 5, "09388681525946835": 5, "make": [4, 5, 6], "mean": 5, "05310463606057757": 5, "add": [2, 5, 7], "through": 5, "each": [2, 5], "actual": [5, 6], "last": [5, 7], "2d": [2, 4, 5, 6, 7], "arrai": [2, 4, 5, 6, 7], "pattern": 5, "shape": [4, 5, 6, 7], "n": [4, 5, 6], "d": [4, 5, 6, 7], "dimens": [2, 4, 5, 6, 7], "c": [5, 7], "log": [5, 6], "m": [4, 5, 6], "test": [4, 5, 6], "A": 7, "name": 7, "assert": 7, "check": 7, "tupl": [2, 7], "expect": 7, "repres": [2, 6, 7], "ar": 7, "ignor": 7, "str": [6, 7], "displai": 7, "construct": 7, "messag": 7, "zero": [6, 7], "mai": 7, "arrayshapeerror": 7, "rais": 7, "when": [2, 7], "don": 7, "t": [6, 7], "match": 7, "7": [2, 6, 7], "traceback": 7, "most": 7, "recent": 7, "call": 7, "invalid": 7, "got": 7, "9": [2, 6, 7], "class_nam": 7, "an": 7, "estim": 7, "ha": 7, "been": 7, "bool": 7, "whether": 7, "instanc": 7, "true": 7, "fals": 7, "notfittederror": 7, "except": 7, "thi": [6, 7], "yet": 7, "method": [6, 7], "befor": 7, "myclass": 7, "edg": 7, "constant": [6, 7], "pad": [2, 7], "one": [6, 7], "side": 7, "which": [6, 7], "ad": 7, "must": [6, 7], "top": 7, "bottom": 7, "left": 7, "right": 7, "ap": 7, "dtype": [4, 6, 7], "float64": [4, 6, 7], "regress": [1, 3], "x_0": 6, "x_1": 6, "dot": [], "set": [6, 7], "lamdba": 6, "non": 6, "ridg": 6, "lambda": 6, "71555556": [], "featur": [4, 6], "1d": [4, 7], "target": [4, 6], "length": 7, "regular": 6, "penalti": 6, "term": 6, "special": 6, "ordinari": 6, "least": 6, "squar": 6, "score": [4, 6], "r": 6, "r_squar": 6, "between": [4, 6, 7], "linearregress": [1, 3, 6], "logisticregress": [1, 3, 6], "assert_str_choic": [1, 3, 7], "equat": 6, "6": 6, "11": 6, "x_test": [4, 6], "y_test": [4, 6], "13": 6, "accuraci": [4, 6], "87830688": [], "26984127": [], "8123917148020608": [], "binari": 6, "logist": 6, "OR": 6, "logic": 6, "gate": 6, "ani": [6, 7], "axi": [6, 7], "astyp": 6, "obtain": 6, "probabl": 6, "predict_prob": 6, "05523008": [], "99999961": [], "98907499": [], "98196914": [], "chang": 6, "metric": 6, "log_loss": 6, "09550699766960563": [], "toler": 6, "0001": 6, "max_it": 6, "1000": 6, "gradient": 6, "onli": 6, "descent": 6, "maximum": 6, "element": 6, "vector": [6, 7], "termin": 6, "criteria": 6, "iter": 6, "either": 6, "newton": 6, "": 6, "y_prob": 6, "can": 6, "classif": [4, 6], "depend": 6, "chosen": 6, "correspond": 6, "array_nam": 7, "str_val": 7, "choic": 7, "str_name": 7, "string": 7, "case_insensit": 7, "belong": 7, "list": 7, "allow": 7, "variabl": 7, "sensit": 7, "eu_countri": 7, "germani": 7, "itali": 7, "spain": 7, "eu": 7, "countri": 7, "britain": 7, "valueerror": 7, "y_0": 6, "y_1": 6, "matmul": 6, "61904762": [], "71428571": [], "9949843299191553": [], "x_2": 6, "9936284": [], "99638247": [], "14": 6, "19": 6, "10": [], "22": [], "90965347": [], "85040984": [], "65699362": [], "56645386": [], "43278248": [], "76689984": [], "9857039": [], "97764573": [], "6669421": 6, "50426919": 6, "51303651": 6, "18": 6, "88126742": 6, "99827693": 6, "99946753": 6, "l2": 6, "column_stack": 6, "all": 6, "AND": 6, "15437859e": 6, "02": 6, "96513677e": 6, "04": 6, "79474434e": 6, "90497532e": 6, "99976135e": 6, "31203746e": 6, "0944218": 6, "17206078": 6, "convolut": [1, 3], "conv2d": [1, 2, 3], "img": 2, "kernel": 2, "stride": 2, "fill": 2, "oper": 2, "imag": 2, "around": 2, "nadarrai": 2, "defin": [2, 7], "both": 2, "17": 2, "15": 2, "31": 2, "21": 2, "seed": [4, 5, 7], "reproduc": [5, 7], "result": [5, 7], "k": 4, "nearest": 4, "neighbour": 4, "pairwise_dist": [1, 3, 7], "a1": 7, "a2": 7, "p": 7, "pairwis": 7, "minkowski": 7, "distanc": 7, "two": 7, "textbf": 7, "follow": 7, "sumlimit": [], "n_": 7, "x_i": 7, "y_i": 7, "share": 7, "same": 7, "second": 7, "expon": 7, "mode": 7, "get": [], "mode_along_axi": [], "along": [], "process": 4, "store": 4, "knn": [1, 3], "sumbigg": [], "sum": 7, "limit": 7, "array_mode_valu": [1, 3, 7], "extract": 7, "ti": 7, "broken": 7, "randomli": 7}, "objects": {"datacheese": [[0, 0, 0, "-", "activations"], [2, 0, 0, "-", "convolution"], [4, 0, 0, "-", "knn"], [5, 0, 0, "-", "neural_networks"], [6, 0, 0, "-", "regression"], [7, 0, 0, "-", "utils"]], "datacheese.activations": [[0, 1, 1, "", "leaky_relu"], [0, 1, 1, "", "leaky_relu_derivative"], [0, 1, 1, "", "relu"], [0, 1, 1, "", "relu_derivative"], [0, 1, 1, "", "sigmoid"], [0, 1, 1, "", "sigmoid_derivative"], [0, 1, 1, "", "tanh"], [0, 1, 1, "", "tanh_derivative"]], "datacheese.convolution": [[2, 1, 1, "", "conv2d"]], "datacheese.knn": [[4, 2, 1, "", "KNN"]], "datacheese.knn.KNN": [[4, 3, 1, "", "fit"], [4, 3, 1, "", "predict"], [4, 3, 1, "", "score"]], "datacheese.neural_networks": [[5, 2, 1, "", "BaseLayer"], [5, 2, 1, "", "LeakyReLULayer"], [5, 2, 1, "", "LinearLayer"], [5, 2, 1, "", "MultiLayerPerceptron"], [5, 2, 1, "", "ReLULayer"], [5, 2, 1, "", "SigmoidLayer"], [5, 2, 1, "", "TanhLayer"]], "datacheese.neural_networks.BaseLayer": [[5, 3, 1, "", "activation"], [5, 3, 1, "", "activation_derivative"], [5, 3, 1, "", "back_propagate"], [5, 3, 1, "", "feed_forward"], [5, 3, 1, "", "predict"]], "datacheese.neural_networks.LeakyReLULayer": [[5, 3, 1, "", "activation"], [5, 3, 1, "", "activation_derivative"]], "datacheese.neural_networks.LinearLayer": [[5, 3, 1, "", "activation"], [5, 3, 1, "", "activation_derivative"]], "datacheese.neural_networks.MultiLayerPerceptron": [[5, 3, 1, "", "add_layer"], [5, 3, 1, "", "back_propagate"], [5, 3, 1, "", "feed_forward"], [5, 3, 1, "", "fit"], [5, 3, 1, "", "predict"]], "datacheese.neural_networks.ReLULayer": [[5, 3, 1, "", "activation"], [5, 3, 1, "", "activation_derivative"]], "datacheese.neural_networks.SigmoidLayer": [[5, 3, 1, "", "activation"], [5, 3, 1, "", "activation_derivative"]], "datacheese.neural_networks.TanhLayer": [[5, 3, 1, "", "activation"], [5, 3, 1, "", "activation_derivative"]], "datacheese.regression": [[6, 2, 1, "", "LinearRegression"], [6, 2, 1, "", "LogisticRegression"]], "datacheese.regression.LinearRegression": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "predict"], [6, 3, 1, "", "score"]], "datacheese.regression.LogisticRegression": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "predict"], [6, 3, 1, "", "predict_prob"], [6, 3, 1, "", "score"]], "datacheese.utils": [[7, 1, 1, "", "array_mode_value"], [7, 1, 1, "", "assert_fitted"], [7, 1, 1, "", "assert_ndarray_shape"], [7, 1, 1, "", "assert_str_choice"], [7, 1, 1, "", "pad_array"], [7, 1, 1, "", "pairwise_distances"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"activ": 0, "api": 1, "document": [1, 3], "welcom": 3, "datachees": 3, "": 3, "content": 3, "indic": 3, "tabl": 3, "neural_network": 5, "util": 7, "regress": 6, "convolut": 2, "knn": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to DataCheese\u2019s documentation!": [[3, "welcome-to-datacheese-s-documentation"]], "Contents:": [[3, null]], "Indices and tables": [[3, "indices-and-tables"]], "activations": [[0, "module-datacheese.activations"]], "API Documentation": [[1, "api-documentation"]], "convolution": [[2, "module-datacheese.convolution"]], "neural_networks": [[5, "module-datacheese.neural_networks"]], "regression": [[6, "module-datacheese.regression"]], "utils": [[7, "module-datacheese.utils"]], "knn": [[4, "module-datacheese.knn"]]}, "indexentries": {"knn (class in datacheese.knn)": [[4, "datacheese.knn.KNN"]], "datacheese.knn": [[4, "module-datacheese.knn"]], "fit() (datacheese.knn.knn method)": [[4, "datacheese.knn.KNN.fit"]], "module": [[4, "module-datacheese.knn"]], "predict() (datacheese.knn.knn method)": [[4, "datacheese.knn.KNN.predict"]], "score() (datacheese.knn.knn method)": [[4, "datacheese.knn.KNN.score"]]}})