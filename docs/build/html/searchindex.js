Search.setIndex({"docnames": ["activations", "api_documentation", "index", "neural_networks", "regression", "utils"], "filenames": ["activations.rst", "api_documentation.rst", "index.rst", "neural_networks.rst", "regression.rst", "utils.rst"], "titles": ["activations", "API Documentation", "Welcome to DataCheese\u2019s documentation!", "neural_networks", "regression", "utils"], "terms": {"datachees": [0, 3, 4, 5], "sigmoid": [0, 1, 2, 3], "x": [0, 3, 4], "function": [0, 3], "sigma": 0, "frac": 0, "1": [0, 3, 4, 5], "e": [0, 3, 4], "paramet": [0, 3, 4, 5], "numpi": [0, 3, 4, 5], "ndarrai": [0, 3, 4, 5], "input": [0, 3, 4], "valu": [0, 3, 4, 5], "return": [0, 3, 4, 5], "f": [0, 3], "output": [0, 3], "type": [0, 3, 4, 5], "sigmoid_deriv": [0, 1, 2], "none": [0, 3, 5], "deriv": [0, 3], "If": [0, 3], "i": [0, 3, 4, 5], "provid": [0, 3], "comput": [0, 3, 4], "directli": [0, 3], "2": [0, 3, 4, 5], "antideriv": [0, 3], "us": [0, 3, 4, 5], "bigg": 0, "default": [0, 3, 4, 5], "f_prime": 0, "tanh": [0, 1, 2], "hyperbol": [0, 3], "tangent": [0, 3], "tanh_deriv": [0, 1, 2], "relu": [0, 1, 2, 3], "rectifi": [0, 3], "linear": [0, 3, 4], "unit": [0, 3], "text": 0, "max": 0, "0": [0, 3, 4, 5], "relu_deriv": [0, 1, 2], "begin": 0, "case": [0, 4, 5], "le": 0, "end": 0, "ne": 0, "leaky_relu": [0, 1, 2], "alpha": [0, 3], "01": [0, 3, 4], "leaki": [0, 3], "leakyrelu": 0, "float": [0, 3, 4, 5], "neg": [0, 3, 4], "slope": [0, 3], "where": [0, 3, 4], "leaky_relu_deriv": [0, 1, 2], "activ": [1, 2, 3], "neural_network": [1, 2], "baselay": [1, 2, 3], "linearlay": [1, 2, 3], "sigmoidlay": [1, 2, 3], "tanhlay": [1, 2, 3], "relulay": [1, 2, 3], "leakyrelulay": [1, 2, 3], "multilayerperceptron": [1, 2, 3], "util": [1, 2], "assert_ndarray_shap": [1, 2, 5], "assert_fit": [1, 2, 5], "pad_arrai": [1, 2, 5], "api": 2, "index": 2, "modul": 2, "search": 2, "page": 2, "class": [3, 4, 5], "n_input": 3, "n_node": 3, "kwarg": 3, "base": [3, 4], "object": [3, 4], "neural": 3, "network": 3, "layer": 3, "int": [3, 4], "number": [3, 4, 5], "usual": 3, "equal": 3, "node": 3, "previou": 3, "neuron": 3, "dict": 3, "specif": 3, "activation_deriv": 3, "predict": [3, 4], "given": [3, 5], "current": 3, "weight": [3, 4], "y_pred": [3, 4], "feed_forward": 3, "feed": 3, "forward": 3, "train": [3, 4], "exampl": [3, 4, 5], "out": 3, "back_propag": 3, "lr": [3, 4], "perform": [3, 4], "backpropag": 3, "error": [3, 5], "propag": 3, "from": [3, 4, 5], "learn": [3, 4], "rate": [3, 4], "updat": [3, 4], "e_next": 3, "backward": 3, "5": [3, 4], "multi": 3, "percetron": 3, "implement": 3, "import": [3, 4, 5], "np": [3, 4, 5], "gener": [3, 4], "data": [3, 4], "n_pattern": 3, "n_dimens": 3, "3": [3, 4, 5], "n_class": 3, "rng": 3, "random": 3, "default_rng": 3, "size": 3, "y": [3, 4], "initi": 3, "model": [3, 4], "hidden": 3, "respect": [3, 4], "add_lay": 3, "4": [3, 4, 5], "over": 3, "20": [3, 4], "epoch": 3, "fit": [3, 4, 5], "verbos": 3, "loss": [3, 4], "15181599599950849": 3, "13701115369406147": 3, "8": [3, 4], "11337662383705667": 3, "12": [3, 4], "10121139637335393": 3, "16": 3, "09388681525946835": 3, "make": [3, 4], "mean": 3, "05310463606057757": 3, "add": [3, 5], "through": 3, "each": 3, "actual": [3, 4], "last": [3, 5], "2d": [3, 4, 5], "arrai": [3, 4, 5], "pattern": 3, "shape": [3, 4, 5], "n": [3, 4], "d": [3, 4], "dimens": [3, 4, 5], "c": [3, 5], "log": [3, 4], "m": [3, 4], "test": [3, 4], "A": 5, "name": 5, "assert": 5, "check": 5, "tupl": 5, "expect": 5, "repres": [4, 5], "ar": 5, "ignor": 5, "str": [4, 5], "displai": 5, "construct": 5, "messag": 5, "zero": [4, 5], "mai": 5, "arrayshapeerror": 5, "rais": 5, "when": 5, "don": 5, "t": [4, 5], "match": 5, "7": [4, 5], "traceback": 5, "most": 5, "recent": 5, "call": 5, "invalid": 5, "got": 5, "9": [4, 5], "class_nam": 5, "an": 5, "estim": 5, "ha": 5, "been": 5, "bool": 5, "whether": 5, "instanc": 5, "true": 5, "fals": 5, "notfittederror": 5, "except": 5, "thi": [4, 5], "yet": 5, "method": [4, 5], "befor": 5, "myclass": 5, "edg": 5, "constant": [4, 5], "pad": 5, "one": [4, 5], "side": 5, "which": [4, 5], "ad": 5, "must": [4, 5], "top": 5, "bottom": 5, "left": 5, "right": 5, "ap": 5, "dtype": [4, 5], "float64": [4, 5], "regress": [1, 2], "x_0": 4, "x_1": 4, "dot": [], "set": [4, 5], "lamdba": 4, "non": 4, "ridg": 4, "lambda": 4, "71555556": [], "featur": 4, "1d": [], "target": 4, "length": [], "regular": 4, "penalti": 4, "term": 4, "special": 4, "ordinari": 4, "least": 4, "squar": 4, "score": 4, "r": 4, "r_squar": 4, "between": 4, "linearregress": [1, 2, 4], "logisticregress": [1, 2, 4], "assert_str_choic": [1, 2, 5], "equat": 4, "6": 4, "11": 4, "x_test": 4, "y_test": 4, "13": 4, "accuraci": 4, "87830688": [], "26984127": [], "8123917148020608": [], "binari": 4, "logist": 4, "OR": 4, "logic": 4, "gate": 4, "ani": 4, "axi": 4, "astyp": 4, "obtain": 4, "probabl": 4, "predict_prob": 4, "05523008": [], "99999961": [], "98907499": [], "98196914": [], "chang": 4, "metric": 4, "log_loss": 4, "09550699766960563": [], "toler": 4, "0001": 4, "max_it": 4, "1000": 4, "gradient": 4, "onli": 4, "descent": 4, "maximum": 4, "element": 4, "vector": 4, "termin": 4, "criteria": 4, "iter": 4, "either": 4, "newton": 4, "": 4, "y_prob": 4, "can": 4, "classif": 4, "depend": 4, "chosen": 4, "correspond": 4, "array_nam": 5, "str_val": 5, "choic": 5, "str_name": 5, "string": 5, "case_insensit": 5, "belong": 5, "list": 5, "allow": 5, "variabl": 5, "sensit": 5, "eu_countri": 5, "germani": 5, "itali": 5, "spain": 5, "eu": 5, "countri": 5, "britain": 5, "valueerror": 5, "y_0": 4, "y_1": 4, "matmul": 4, "61904762": [], "71428571": [], "9949843299191553": [], "x_2": 4, "9936284": [], "99638247": [], "14": 4, "19": 4, "10": [], "22": [], "90965347": [], "85040984": [], "65699362": [], "56645386": [], "43278248": [], "76689984": [], "9857039": [], "97764573": [], "6669421": 4, "50426919": 4, "51303651": 4, "18": 4, "88126742": 4, "99827693": 4, "99946753": 4, "l2": 4, "column_stack": 4, "all": 4, "AND": 4, "15437859e": 4, "02": 4, "96513677e": 4, "04": 4, "79474434e": 4, "90497532e": 4, "99976135e": 4, "31203746e": 4, "0944218": 4, "17206078": 4}, "objects": {"datacheese": [[0, 0, 0, "-", "activations"], [3, 0, 0, "-", "neural_networks"], [4, 0, 0, "-", "regression"], [5, 0, 0, "-", "utils"]], "datacheese.activations": [[0, 1, 1, "", "leaky_relu"], [0, 1, 1, "", "leaky_relu_derivative"], [0, 1, 1, "", "relu"], [0, 1, 1, "", "relu_derivative"], [0, 1, 1, "", "sigmoid"], [0, 1, 1, "", "sigmoid_derivative"], [0, 1, 1, "", "tanh"], [0, 1, 1, "", "tanh_derivative"]], "datacheese.neural_networks": [[3, 2, 1, "", "BaseLayer"], [3, 2, 1, "", "LeakyReLULayer"], [3, 2, 1, "", "LinearLayer"], [3, 2, 1, "", "MultiLayerPerceptron"], [3, 2, 1, "", "ReLULayer"], [3, 2, 1, "", "SigmoidLayer"], [3, 2, 1, "", "TanhLayer"]], "datacheese.neural_networks.BaseLayer": [[3, 3, 1, "", "activation"], [3, 3, 1, "", "activation_derivative"], [3, 3, 1, "", "back_propagate"], [3, 3, 1, "", "feed_forward"], [3, 3, 1, "", "predict"]], "datacheese.neural_networks.LeakyReLULayer": [[3, 3, 1, "", "activation"], [3, 3, 1, "", "activation_derivative"]], "datacheese.neural_networks.LinearLayer": [[3, 3, 1, "", "activation"], [3, 3, 1, "", "activation_derivative"]], "datacheese.neural_networks.MultiLayerPerceptron": [[3, 3, 1, "", "add_layer"], [3, 3, 1, "", "back_propagate"], [3, 3, 1, "", "feed_forward"], [3, 3, 1, "", "fit"], [3, 3, 1, "", "predict"]], "datacheese.neural_networks.ReLULayer": [[3, 3, 1, "", "activation"], [3, 3, 1, "", "activation_derivative"]], "datacheese.neural_networks.SigmoidLayer": [[3, 3, 1, "", "activation"], [3, 3, 1, "", "activation_derivative"]], "datacheese.neural_networks.TanhLayer": [[3, 3, 1, "", "activation"], [3, 3, 1, "", "activation_derivative"]], "datacheese.regression": [[4, 2, 1, "", "LinearRegression"], [4, 2, 1, "", "LogisticRegression"]], "datacheese.regression.LinearRegression": [[4, 3, 1, "", "fit"], [4, 3, 1, "", "predict"], [4, 3, 1, "", "score"]], "datacheese.regression.LogisticRegression": [[4, 3, 1, "", "fit"], [4, 3, 1, "", "predict"], [4, 3, 1, "", "predict_prob"], [4, 3, 1, "", "score"]], "datacheese.utils": [[5, 1, 1, "", "assert_fitted"], [5, 1, 1, "", "assert_ndarray_shape"], [5, 1, 1, "", "assert_str_choice"], [5, 1, 1, "", "pad_array"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"activ": 0, "api": 1, "document": [1, 2], "welcom": 2, "datachees": 2, "": 2, "content": 2, "indic": 2, "tabl": 2, "neural_network": 3, "util": 5, "regress": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"API Documentation": [[1, "api-documentation"]], "Welcome to DataCheese\u2019s documentation!": [[2, "welcome-to-datacheese-s-documentation"]], "Contents:": [[2, null]], "Indices and tables": [[2, "indices-and-tables"]], "activations": [[0, "module-datacheese.activations"]], "neural_networks": [[3, "module-datacheese.neural_networks"]], "utils": [[5, "module-datacheese.utils"]], "regression": [[4, "module-datacheese.regression"]]}, "indexentries": {"linearregression (class in datacheese.regression)": [[4, "datacheese.regression.LinearRegression"]], "logisticregression (class in datacheese.regression)": [[4, "datacheese.regression.LogisticRegression"]], "datacheese.regression": [[4, "module-datacheese.regression"]], "fit() (datacheese.regression.linearregression method)": [[4, "datacheese.regression.LinearRegression.fit"]], "fit() (datacheese.regression.logisticregression method)": [[4, "datacheese.regression.LogisticRegression.fit"]], "module": [[4, "module-datacheese.regression"]], "predict() (datacheese.regression.linearregression method)": [[4, "datacheese.regression.LinearRegression.predict"]], "predict() (datacheese.regression.logisticregression method)": [[4, "datacheese.regression.LogisticRegression.predict"]], "predict_prob() (datacheese.regression.logisticregression method)": [[4, "datacheese.regression.LogisticRegression.predict_prob"]], "score() (datacheese.regression.linearregression method)": [[4, "datacheese.regression.LinearRegression.score"]], "score() (datacheese.regression.logisticregression method)": [[4, "datacheese.regression.LogisticRegression.score"]]}})